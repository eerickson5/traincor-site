{"version":3,"sources":["components/Button.js","components/Navbar.js","components/HeroSection.js","components/CardItem.js","components/Cards.js","components/InfoBlock.js","components/Footer.js","components/pages/Home.js","components/pages/Policies.js","components/AppLookSection.js","components/pages/Trainers.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","href","checkButtonStyle","includes","checkButtonSize","className","Navbar","useState","click","setClick","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","to","alt","src","HeroSection","autoPlay","loop","muted","CardItem","props","text","Cards","InfoBlock","store","class","Footer","target","title","Home","Policies","AppLookSection","reverse","subtitle","Trainers","About","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.099b79b0.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n//import {Link} from 'react-router-dom';\n\nimport { Link } from 'rebass'\n\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({ children, type, onClick, buttonStyle, buttonSize, href }) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle: STYLES[0];\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n    return (\n        <Link href={href} className='btn-mobile'>\n            <button \n            onClick={onClick}\n            type={type}\n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}>\n                {children} \n            </button>\n        </Link>\n    )\n};\n\n/*\n<Link to='/' className='btn-mobile'>\n            <button \n            onClick={onClick}\n            type={type}\n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}>\n                {children}\n            </button>\n        </Link>\n        */","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from './Button';\nimport './Navbar.css';\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n    const showButton = () => {\n        if(window.innerWidth <= 960) {\n            setButton(false);\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect( () => {\n        showButton();\n    }, []);\n    window.addEventListener('resize', showButton);\n\n    return (\n        <>\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\n                        <img\n                        className='logo_img'\n                        alt='Traincor Logo'\n                        src='images/icon.png'\n                        />\n                    </Link>\n                    <div className='menu-icon' onClick={handleClick}>\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'}/>\n                    </div>\n                    <ul className ={click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                                Home\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/trainers' className='nav-links' onClick={closeMobileMenu}>\n                                Trainers/Coaches\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/about' className='nav-links' onClick={closeMobileMenu}>\n                                About\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/policies' className='nav-links' onClick={closeMobileMenu}>\n                                Policies\n                            </Link>\n                        </li>\n                        {/* <li className='nav-item'>\n                            <Link to='/contact' className='nav-links' onClick={closeMobileMenu}>\n                                Contact Us\n                            </Link>\n                        </li> */}\n                    </ul>\n                    {/* {button && <Button buttonStyle='btn--outline'>HOME</Button>} */}\n                </div>\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { Button } from './Button';\nimport { Link } from 'rebass'\nimport '../App.css';\nimport './HeroSection.css';\n\n\nfunction HeroSection() {\n    return (\n        <div className='hero-container'>\n            <video src=\"/videos/video-h.mp4\" autoPlay loop muted />\n            <h1>Traincor</h1>\n            <p>Discover, build, and share workouts for any goal or sport</p>\n            <div className=\"hero-btns\">\n                <Button className='btns' buttonStyle='btn-outline' buttonSize='btn--large' href='https://apps.apple.com/us/app/traincor/id1538655628'>\n                    Download iOS\n                </Button>\n                <Button className='btns' buttonStyle='btn-outline' buttonSize='btn--large' href=\"https://play.google.com/store/apps/details?id=io.traincor.app\">\n                    Download Android\n                </Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default HeroSection\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className='cards__item'>\n        <div className='cards__item__link'>\n          <div className='cards__item__pic-wrap'>\n            <img\n              className='cards__item__img'\n              alt='Screenshot'\n              src={props.src}\n            />\n          </div>\n          <div className='cards__item__info'>\n            <p className='cards__item__text'>{props.text}</p>>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n}\n\nexport default CardItem;","import React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\n\nfunction Cards() {\n  return (\n    <div className='cards'>\n      <div className='cards__container'>\n        <div className='cards__wrapper'>\n          <ul className='cards__items'>\n            <CardItem\n              src='/images/workout_screenshot.png'\n              text='Explore workouts for any sport or goal'\n            />\n            <CardItem\n              src='/images/exercise_screenshot.gif'\n              text='Learn new training exercises'\n            />\n            <CardItem\n              src='/images/edit_screenshot.png'\n              text='Build your own workouts'\n            />\n            <CardItem\n              src='/images/chat_screenshot.png'\n              text='Send workouts to your friends'\n            />\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;","import React from 'react'\nimport './InfoBlock.css';\nimport { Link } from 'rebass'\n\nfunction InfoBlock(props) {\n    if(props.store) {\n        return (\n            <div className=\"store-btns-home\">\n                <Link href='https://apps.apple.com/us/app/traincor/id1538655628' className='store-icon-link'>\n                    <i class=\"fab fa-app-store-ios\"/>\n                    <p>App Store</p>\n                </Link>\n\n                <Link href=\"https://play.google.com/store/apps/details?id=io.traincor.app\" className='store-icon-link'>\n                    <i class=\"fab fa-google-play\"/>\n                    <p>Play Store</p>\n                </Link>\n            </div>\n        )\n    } else {\n        return (\n            <div className='info-block'>\n                <h2 className='info-block-text'>{props.text}</h2>\n            </div>\n        )\n    }\n    \n}\n\nexport default InfoBlock\n","import React from 'react';\nimport './Footer.css';\nimport { Button } from './Button';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <div className='footer-container'>\n      <section class='social-media'>\n        <div class='social-media-wrap'>\n          <div class='footer-logo'>\n            <Link to='/' className='social-logo'>\n                <img\n                className='footer_logo_img'\n                alt='Traincor Logo'\n                src='images/icon.png'\n                />\n            </Link>\n          </div>\n          <small class='website-rights'>Circuit Crunch LLC © 2021</small>\n          <div class='social-icons'>\n            <a target=\"_blank\" href=\"https://www.facebook.com/traincor.io\" title=\"example\" class='social-icon-link facebook'>\n              <i class='fab fa-facebook' />\n            </a>\n            <a target=\"_blank\" href=\"https://www.instagram.com/traincor.io/\" title=\"example\" class='social-icon-link instagram'>\n              <i class='fab fa-instagram' />\n            </a>\n            <a target=\"_blank\" href=\"https://open.spotify.com/user/hicjqtxpi9l26uo0yalkjq13i?si=6piWTOlEQU2OXt1DhlNbPg\" title=\"example\" class='social-icon-link spotify'>\n              <i class='fab fa-spotify' />\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport '../../App.css';\nimport HeroSection from '../HeroSection';\nimport Cards from '../Cards';\nimport InfoBlock from '../InfoBlock';\nimport Footer from '../Footer';\n\nfunction Home () {\n    return (\n        <>\n            <HeroSection/>\n            <InfoBlock text='Discover and share workouts with your teammates, clients, and the whole world.'/>\n            <Cards/>\n            <InfoBlock text=\"Help us build the biggest collection of workouts and exercises ever!\"/>\n            <InfoBlock store/>\n            <Footer/>\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport '../../App.css';\nimport Footer from '../Footer';\n\nfunction Policies () {\n    return (\n        <>\n        <div className='policies'>\n            <h1>Our Policies</h1>\n            <p className='policies-disclaimer'>All the following policies are accessible within the Traincor app.</p>\n            \n            <h2>Terms of Use Policy</h2>\n            <p>\n                Traincor withholds the right to remove any content or accounts that do not comply with the following Terms of Use.\n            </p>\n            <p>\n                You may not impersonate or make an account for another person without their express permission.\n            </p>\n            <p>\n                You may not use Traincor as a platform for hate speech, to induce violence, or to spread otherwise offensive material.\n            </p>\n            <p>\n                You may not reproduce content uploaded by other users for monetary gain.\n            </p>\n            <p>\n                You may not post private or confidential information belonging to someone else or violate the intellectual property of another person.\n            </p>\n            <p>\n                Traincor withholds the right to modify any inaccurate or misleading information pertaining to exercises, although we do not take responsibility for inaccurate or misleading content.\n            </p>\n\n            <h2>Liability Policy</h2>\n            <p>\n                Traincor does not act as a medical entity.  In addition, do not assume any Traincor users are trained medical professionals and do not take advice found on our platform as that of a medical professional.\n            </p>\n            <p>\n                Exercises and workouts on Traincor are provided solely for informational purposes.  Our content is not intended to treat, cure, or prevent any disease and should not be taken as medical advice.\n            </p>\n            <p>\n                Exercising involves inherent risks, so you should consult your doctor before starting any new exercise program.  In addition, stop exercising immediately and consult a medical professional if you feel pain when exercising.\n            </p>\n            <p>\n                You acknowledge that you take full responsibility for your own health.  Traincor expressly disclaims responsibility for any liability, injury, or damage caused by the use or interpretation of any content found on our platform.\n            </p>\n\n            <h2>Privacy Policy</h2>\n            <h3>Introduction</h3>\n            <p>\n                Traincor is public.\n                Exercises, public workouts, and the media they contain are immediately searchable and viewable by anyone with the app.\n                You can also compile private workouts that are only available to you.\n            </p>\n            <p>\n                When you use Traincor, even if you are not logged into an account, we receive some information from you like the type of device you’re using.  \n                We use this information to keep your account secure.\n                You can choose to share additional information with us like your email address and the information you put into your public profile.\n            </p>\n            <p>\n                In addition, we use your posted workouts and exercises, in-app search history, and in-app viewing history to show you more relevant content.\n                If you have questions related to our privacy practices, feel free to contact us at info@traincor.io.\n            </p>\n\n            <h3>Information You Share</h3>\n            <p>\n                You don’t have to create an account to use some of our features, such as searching and viewing public workouts and exercises. \n                We still receive information in this circumstance, even if you have not created an account. \n                For example, we collect data about what keywords you search for and what workouts you view to determine what content is popular and what content you may want to view in the future.\n            </p>\n            <p>\n                If you do choose to create an account, you must provide us with an email address, password, and display name.\n                Your display name is always public, but your email address and password remain private.\n                You are responsible for the media and information you provide on Traincor.\n            </p>\n\n            <h3>Information We Share</h3>\n            <p>\n                We do not share your personal data without your consent.\n                However, popular trends in user data, such as what workouts are popular, may be shared with potential advertising partners.\n            </p>\n            <p>\n                In addition, we engage service providers to perform functions and provide services for us in the United States and other countries.\n                For example, we use a variety of third-party services to help operate our platform, such as to host our databases, safely store profile data, and help us understand our users.\n            </p>\n            <p>\n                We may share your private data with such service providers subject to obligations consistent with this Policy and any other appropriate confidentiality and security measures.\n                These services must use your personal data only on our behalf and according to our instructions.\n            </p>\n\n            <h3>Information We Repost</h3>\n            <p>\n                Users retain ownership of the content they post.  However, we reserve the right to repost the content associated with exercises and public workouts on other social media platforms, such as Instagram and Facebook.\n            </p>\n            \n            <h3>Law and Harm</h3>\n            <p>\n                Nothing in this Privacy Policy is intended to limit any legal defenses or objections that you may have to a third party’s request to disclose your personal data. \n                Notwithstanding anything to the contrary in this Privacy Policy, we may preserve, use, share, or disclose your data if we believe that it is reasonably necessary to do any of the following:\n            </p>\n            <p>\n                to comply with a law, regulation, legal process, or governmental request;\n            </p>\n            <p>\n                to protect the safety of any person;\n            </p>\n            <p>\n                to protect the safety or integrity of our platform or to explain why we have removed content;\n            </p>\n            <p>\n                to address fraud, security, or technical issues;\n            </p>\n            <p>\n                or to protect our rights and property or the rights and property of those who use our services.\n            </p>\n\n            <h3>Account Deletion</h3>\n            <p>\n                We do not currently keep backup account data for account deletions.\n                Therefore, if you delete your account, all your posted workouts, exercises, and other data will be permanently deleted and no longer viewable by yourself or other users.\n            </p>\n\n            <h3>Children</h3>\n            <p>\n                Traincor is not to be used by children under the age of 13.\n                Users must also be old enough to consent to the processing of their personal data in their country.\n            </p>\n\n            \n        </div>\n        \n        <Footer/>\n        </>\n    )\n}\n\nexport default Policies;","import React from 'react'\nimport CardItem from './CardItem';\nimport './AppLookSection.css';\n\nfunction AppLookSection(props) {\n    // props.isMobile ? 'app-look-container-mobile' : props.reverse ? 'app-look-container-reverse' :'app-look-container'\n    return (\n        <div className={props.reverse ? 'app-look-container-reverse' :'app-look-container'}>\n            <div className='app-look-card'>\n                <CardItem src={props.src} />\n            </div>\n            \n            <div className='app-look-vert'>\n                <h3>{props.title}</h3>\n                <p>{props.subtitle}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default AppLookSection\n","import React from 'react'\nimport AppLookSection from '../AppLookSection';\nimport '../Button.css';\nimport '../../App.css';\nimport InfoBlock from '../InfoBlock';\nimport Footer from '../Footer';\n\nfunction Trainers() {\n    return (\n        <div className='trainers'>\n                \n            <AppLookSection\n            src='/images/build_screenshot.png'\n            title=\"BUILD CUSTOM WORKOUTS\"\n            subtitle=\"tailored to your clients' goals\"\n            />\n\n            <AppLookSection\n            src='/images/create_screenshot.png'\n            title=\"CREATE NEW EXERCISES\"\n            subtitle=\"for your clients to do at home or on the go\"\n            reverse\n            />\n\n            <AppLookSection\n            src='/images/chat_screenshot.png'\n            title=\"SEND CLIENTS WORKOUTS\"\n            subtitle=\"and get feedback like confirmation of completion\"\n            />\n\n            <AppLookSection\n            src='/images/profile_screenshot.png'\n            title=\"SHARE PUBLIC WORKOUTS\"\n            subtitle=\"to connect with new virtual clients and gain a following\"\n            reverse\n            />\n\n            <InfoBlock text=\"Download and start virtually training for free!\"/>\n            <InfoBlock store/>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Trainers\n","import React from 'react'\nimport '../../App.css';\nimport InfoBlock from '../InfoBlock';\nimport Footer from '../Footer';\n\nfunction About() {\n    return (\n        <div className='about'>\n            <h3>Where We Started</h3>\n            <p>\n                Traincor was founded in 2020 by Elise Erickson, an athlete and student at Georgia State University.\n                Elise had developed a training plan to add 3 inches to her vertical jump over Christmas break, but she had no way to send it to her teammates when they asked to try it.\n                She decided to spend her COVID-19 lockdown time to build to solve this problem and Traincor was officially launched on December 4, 2020.\n            </p>\n            <h3>Where We Are</h3>\n            <p>\n                Traincor is currently working directly with personal trainers to build features for virtual training.\n                Our userbase is steadily growing, thanks to social media and word-of-mouth between trainers.\n                We are also looking for partners in the fitness industry to sponsor workouts on the home page of the Traincor app.\n                Within the next year, we hope to add full paid training plans as a way for trainers and professional athletes to make a living.\n            </p>\n            <h3>Where We're Going</h3>\n            <p>\n                Traincor is on its way to becoming the #1 source for personal and athletic training, with a search engine to discover workouts for any goal.\n                Our goal is to become the biggest source of exercises and workouts ever by 2024.\n            </p>\n            <h3>How You Can Join</h3>\n            <p>\n                Download Traincor on your smartphone or tablet and start building your own workouts!\n                If you can't find an exercise you love, add it yourself for other users to discover and love too.\n                You can also engage us on social media to recommend new features and get notified when they are released.\n            </p>\n            <p>\n                If you're a company that would like to work with us, please reach out to the email found at linqapp.com/traincor.\n            </p>\n\n            <InfoBlock text=\"Join our growing community of athletes and trainers!\"/>\n            <InfoBlock store/>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default About\n","\nimport React from 'react';\n//import { Box, Button, Text } from 'rebass'\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/pages/Home';\nimport Policies from './components/pages/Policies';\nimport Trainers from './components/pages/Trainers';\nimport About from './components/pages/About';\n\nfunction App() {\n    return(\n      <>\n        <Router>\n          <Navbar/>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/policies' exact component={Policies} />\n            <Route path='/trainers' exact component={Trainers} />\n            <Route path='/about' exact component={About} />\n          </Switch>\n        </Router>\n      </>\n    )\n  }\n\n  // render() {\n\n  //   let pp = this.renderItem(this.state.privacyPolicy)\n  //   let tp = this.renderItem(this.state.termsOfUse)\n  //   let lp = this.renderItem(this.state.liabilityPolicy)\n  //   let mp = this.renderItem(this.state.mediaPolicy)\n    \n  //   return (\n  //     <div className=\"App\">\n  //       <body className=\"App-body\">\n  //           <Box\n  //             sx={{\n  //               px: 4,\n  //               py: 6,\n  //               backgroundImage: 'url(https://source.unsplash.com/random/1024x768?exercise)',\n  //               backgroundSize: 'cover',\n  //               color: 'white',\n  //               bg: 'gray',\n  //             }}>\n  //             <Heading\n  //               textAlign='center'\n  //               fontSize={[ 7, 8 ]}\n  //               sx={{fontWeight: 'bold'}}\n  //               >\n  //               TRAINCOR\n  //             </Heading>\n  //             <Flex width={3/4} sx={{justifyContent:'flex-end'}}>\n              \n  //             <a href=\"https://www.instagram.com/traincor.io/\" target='blank'>\n  //               <Button sx={{width: 80, height: 80 , backgroundColor: '#00000000'}}>\n  //                   <Image\n  //                     src={insta}\n  //                     sx={{\n  //                       borderRadius: 40,\n  //                     }}\n  //                   />\n  //                 </Button>\n  //             </a>\n                \n  \n  //             <a href=\"https://www.facebook.com/traincor.io\" target='blank'>\n  //               <Button sx={{width: 80, height: 80 , backgroundColor: '#00000000'}}>\n  //                   <Image\n  //                     src={fb}\n  //                     sx={{\n  //                       borderRadius: 40,\n  //                     }}\n  //                   />\n  //                 </Button>\n  //             </a>\n\n  //             <a href=\"https://open.spotify.com/user/hicjqtxpi9l26uo0yalkjq13i?si=6piWTOlEQU2OXt1DhlNbPg\" target='blank'>\n  //               <Button sx={{width: 80, height: 80 , backgroundColor: '#00000000'}}>\n  //                   <Image\n  //                     src={spot}\n  //                     sx={{\n  //                       borderRadius: 40,\n  //                     }}\n  //                   />\n  //                 </Button>\n  //             </a>\n  //             </Flex>\n  //           </Box>\n          \n  //         <Text sx={{margin: 70, mb: 50, font: 'Menlo, monospace'}} fontSize={4}>\n  //           Our Mission: compile the world's largest database of exercises and workouts for athletes, trainers, coaches, physical therapists, and fitness enthusiasts.\n  //         </Text>\n\n  //         <Flex width={1} sx={{justifyContent: 'space-around', mb: 50}}>\n  //           <Link sx={{ color: '#004AAD', padding: 10, fontWeight: 'bold' }} fontSize={3} href=\"https://apps.apple.com/us/app/traincor/id1538655628\">DOWNLOAD iOS</Link>\n  //           <Link sx={{ color: '#004AAD', padding: 10, fontWeight: 'bold' }} fontSize={3} href=\"https://play.google.com/store/apps/details?id=io.traincor.app\">DOWNLOAD ANDROID</Link>\n  //         </Flex>\n\n  //         {pp}\n  //         {lp}\n  //         {tp}\n  //         {mp}\n\n  //         <Box sx={{height: 50}}/>\n\n  //       </body>\n  //     </div>\n  //   );\n  // }\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}